/*
  Digital Roadsign by Matthew Hepworth
  Created for a CSE 310 project.

  AI Declaration:
    All code is original and not generated using generative artificial intelligence unless otherwise noted.
    All code partaining to the webapp (nodejs webserver, EJS view engine, and JavaScript queries to the server)
    was never generated by artificial intelligence, however, GitHub Copilot was used to explain concepts and help
    troubleshoot issues.

  Description:
    This is the server-side code for the Digital Roadsign project. It is a simple web server that serves a landing page
    with a message and allows users to share messages with a unique ID. The server stores shared messages in a map and
    serves them when the user navigates to the unique ID. The server also serves static files such as CSS and JavaScript
    files that can be found at /assets.

  The server uses the following routes:
    - GET /: Renders the landing page with the default message.
    - POST /share: Accepts a JSON object with a message and stores it in a map with a unique ID. Responds with the unique ID.
    - GET /:id: Renders the landing page with the shared message corresponding to the unique ID.
  
  Installation Instructions: (if desired)
    1. Install Node.js v20.5.1 or later.
    2. Clone the repository.
    3. run `npm i --save` to install dependencies and save to local project directory.
    4. run `node server` to start the server.
    5. Navigate to http://localhost:5500 in your browser to view the Digital Roadsign.
*/

const express = require('express');
const path = require('path');
const app = express();
const port = 5500;

// Add body parser middleware
app.use(express.json());

const messages = new Map(); // Create a map to store shared messages. - Is Map the best choice? Not sure.

// Set EJS as the view engine
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

// Serve static files
app.use(express.static(path.join(__dirname, 'public')));

// Render index.ejs for the root route and pass landing page message
app.get('/', (req, res) => {
  res.render('index', { shared: false, phrase: 'Created By:[NL]Matthew[NL]Hepworth' });
});

// Share endpoint
app.post('/share', (req, res) => {
  const { message } = req.body;
  const id = Math.random().toString(36).substring(2, 12); // Generate random 10 character ID
  messages.set(id, message);
  res.json({ id }); // Respond to client with ID that can be used to load shared message
});

// View shared message
app.get('/:id', (req, res) => {
  const message = messages.get(req.params.id);
  if (message) {
    res.render('index', { shared: true, phrase: message });
  } else {
    // If ID doesn't exist, reroute.
    res.redirect('/');
  }
});

// Self explanitory.
app.listen(port, () => {
  console.log(`Server is running at http://localhost:${port}`);
});
